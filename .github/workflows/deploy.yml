name: 🚀 Deploy to Alibaba Cloud ECS Instance
on:
  push:
    branches:
      - main
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-22.04
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔎 Type check
        run: npm run typecheck --if-present

  build:
    name: 🛠 Build
    runs-on: ubuntu-22.04
    needs: [typecheck]

    steps:
    - name: ⬇️ Checkout repo
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx 
      uses: docker/setup-buildx-action@v3

    - name: 🐳 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.CONTAINER_NAME }}:latest

  deploy:
    name: 🚀 Deploy to ECS
    runs-on: ubuntu-22.04
    needs: [build]

    steps: 
      - name: 📥 Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: 🔑 Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.ECS_PRIVATE_KEY }}
      
      - name: 🚀 Deploy to ECS
      # REDIS_HOST is the IP of Redis image on the Docker network the app and Redis are running on
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.ECS_USER }}@${{ vars.ECS_HOST }} << 'EOF'
            sudo docker pull ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.CONTAINER_NAME }}:latest
            sudo docker stop ${{ vars.CONTAINER_NAME }} || true
            sudo docker rm ${{ vars.CONTAINER_NAME }} || true
            sudo docker run -d -p ${{ vars.HOST_PORT }}:${{ vars.APP_PORT }} \
            --name ${{ vars.CONTAINER_NAME }} \
            -e SPOTIFY_CLIENT_ID=${{ vars.SPOTIFY_CLIENT_ID }} \
            -e SPOTIFY_CLIENT_SECRET=${{ secrets.SPOTIFY_CLIENT_SECRET }} \
            -e SPOTIFY_API_URL=${{ vars.SPOTIFY_API_URL }} \
            -e SPOTIFY_AUTH_URL=${{ vars.SPOTIFY_AUTH_URL }} \
            -e GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
            -e PORT=${{ vars.APP_PORT }} \
            -e REDIS_PORT=${{ vars.REDIS_PORT }} \
            -e REDIS_HOST=${{ vars.REDIS_HOST }} \
            ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.CONTAINER_NAME }}:latest
            sudo docker image prune -f
          EOF